@page "/breedingRecordList"

@using Services
@using BreederBlazor.Services.Auth
@using System.Net.Http
@using BreederBlazor.Services.Util
@using System.Net.Http.Headers
@using BreederBlazor.Models.Base
@using BreederBlazor.Services.BreedingRecords
@using BreederBlazor.Components

@inherits BasePageComponent

@inject IAuthService AuthService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IBreedingRecordService BreedingRecordService

@if (Loaded)
{
    <div> uri @NavigationManager.ToBaseRelativePath(NavigationManager.Uri)</div>

    <RadzenButton Click=@(args => OnClickNewBreedingRecord("Button with text")) Text="New Breeding Record" Style="margin-bottom: 20px; width: 300px" />

    <RadzenButton Click=@(args => OnClickNewContact("Button with text")) Text="New Contact" Style="margin-bottom: 20px; width: 300px" />

    <RadzenButton Click=@(args => OnClickNewLitter("Button with text")) Text="New Litter" Style="margin-bottom: 20px; width: 300px" />

    @*<RadzenButton Click=@(args => OnClickNewBreedingRecord("Button with text")) Text="New Note Record" Style="margin-bottom: 20px; width: 300px" />

        <RadzenButton Click=@(args => OnClickNewBreedingRecord("Button with text")) Text="New ContactNote Record" Style="margin-bottom: 20px; width: 300px" />*@


    <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced" AllowPaging="false" PageSize="4"
                AllowSorting="true" Data="@breedingRecords.AsQueryable()" TItem="BreedingRecord" Value="@Record" ColumnWidth="200px">
        <Columns>
            <RadzenGridColumn TItem="BreedingRecord" Property="Name" Title="Name">
                <Template Context="data">
                    <div @onclick="(() => GoToBreedingRecordDetails(data.Id))">@data.Name</div>
                </Template>
            </RadzenGridColumn>

            <RadzenGridColumn TItem="BreedingRecord" Property="BirthDate" Title="Birth Date">
                <Template Context="data">
                    @String.Format("{0:d}", data.Birthday)
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="BreedingRecord" Property="DateOfAcquisition" Title="Acquired">
                <Template Context="data">
                    @String.Format("{0:d}", data.DateOfAcquisition)
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="BreedingRecord" Property="Owner.Name" Title="Owner" />
            <RadzenGridColumn TItem="BreedingRecord" Property="BirthLitter.Name" Title="Birth Litter" />
            <RadzenGridColumn TItem="BreedingRecord" Property="Sex" Title="Sex" />
            <RadzenGridColumn TItem="BreedingRecord" Property="Breeder.Name" Title="Breeder" />
        </Columns>

    </RadzenGrid>



}


@code {

    private List<BreedingRecord> breedingRecords;

    private BreedingRecord Record;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        breedingRecords = new List<BreedingRecord>();

        breedingRecords = await BreedingRecordService.GetAllBreedingRecords(AuthService.user.Key);

        Loaded = true;
    }

    private void GoToBreedingRecordDetails(int id)
    {

        NavigationManager.NavigateTo("/breedingRecord/view/" + id.ToString());
    }

    void OnClickNewBreedingRecord(string buttonName)
    {
        PushCurrentPageToHistory();
        NavigationManager.NavigateTo("/createBreedingRecord");
    }

    void OnClickNewContact(string buttonName)
    {
        PushCurrentPageToHistory();
        NavigationManager.NavigateTo("/createContact");
    }

    void OnClickNewLitter(string buttonName)
    {
        PushCurrentPageToHistory();
        NavigationManager.NavigateTo("/createLitter");
    }
}
