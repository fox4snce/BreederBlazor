@page "/breedingRecord/view/{id:int}"

@using BreederBlazor.Models.Base
@using BreederBlazor.Components.Views

@using BreederBlazor.Services.BreedingRecords
@using BreederBlazor.Components

@using BreederBlazor.Components.Forms

@inherits BasePageComponent

@inject IBreedingRecordService BreedingRecordService

@if (Loaded && Record != null)
{
    @*
    <RadzenButton Click=@(args => OnClickNewBreedingRecordNote("Button with text")) Text="New Breeding Record Note" Style="margin-bottom: 20px; width: 150px" />

    
    <BreedingRecordNoteForm />
    *@

    <div class="row" style="margin-bottom: 8px; padding: 4px; background-color: azure;">
        <div class="col" style="text-align: left;">
            <strong>@Record.Name</strong>
        </div>
    </div>

    <RadzenTabs Change=@OnChange style="">
        <Tabs>
            <RadzenTabsItem Text="Info">
                <div class="row">
                    <div class="col" style="text-align: right;">
                        Birthdate
                    </div>
                    <div class="col">
                        @Record.Birthday.Date.ToShortDateString()
                    </div>
                </div>

                <div class="row">
                    <div class="col" style="text-align: right;">
                        Sex
                    </div>
                    <div class="col">
                        @Record.Sex
                    </div>
                </div>

                <div class="row">
                    <div class="col" style="text-align: right;">
                        Acquired
                    </div>
                    <div class="col">
                        @Record.DateOfAcquisition.ToShortDateString()
                    </div>
                </div>
                @if (Record.BirthLitter != null)
                {
                    <div class="row">
                        <div class="col" style="text-align: right;">
                            Birth Litter
                        </div>
                        <div class="col">
                            @Record.BirthLitter.Name
                        </div>
                    </div>
                }
                @foreach (Characteristic characteristic in Record.Characteristics)
                {
                    <div class="row">
                        <div class="col" style="text-align: right;">
                            @characteristic.Category
                        </div>
                        <div class="col">
                            @characteristic.Feature
                        </div>
                    </div>
                }
            </RadzenTabsItem>
            <RadzenTabsItem Text="Notes">
                @foreach (Note note in Record.Notes)
                {
                    <div style="margin: 10px;">
                        <NoteComponent Note="note" />
                    </div>
                }
            </RadzenTabsItem>
            <RadzenTabsItem Text="Contacts">
                @if (Record.Owner != null)
                {
                    <div class="row">
                        <div class="col-sm">
                            Owner
                        </div>
                        <div class="col-sm">
                            <ContactComponent contactRecord="@Record.Owner" />
                        </div>
                    </div>
                }

                @if (Record.Breeder != null)
                {
                    <div class="row" style="margin-top: 10px;">
                        <div class="col-sm">
                            Breeder
                        </div>
                        <div class="col-sm">
                            <ContactComponent contactRecord="@Record.Breeder" />
                        </div>
                    </div>
                }


            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
}

@code
{
    [Parameter]
    public int id { get; set; }

    private BreedingRecord Record;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await RetrieveDetails();

        Loaded = true;
    }


    private async Task RetrieveDetails()
    {
        Record = await BreedingRecordService.GetBreedingRecordById(AuthService.user.Key, id);

    }

    void OnChange(int index)
    {
        //console.Log($"Tab with index {index} was selected.");
    }

    void OnClickNewBreedingRecordNote(string buttonName)
    {
        PageHistory.PushPage("/breedingRecord/view/" + id);
        NavigationManager.NavigateTo("/createBreedingRecordNote");
    }

}
