@page "/home"

@using Services
@using BreederBlazor.Services.Auth
@using System.Net.Http
@using BreederBlazor.Services.Util
@using System.Net.Http.Headers
@using BreederBlazor.Models.Base
@using BreederBlazor.Services.BreedingRecords

@inject IAuthService AuthService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IBreedingRecordService BreedingRecordService

@if (Loaded)
{
    

    @if (BreedingRecords != null)
    {
        <div class="row">
            <div class="col" style="border: 1px solid black;">
                Name
            </div>
            <div class="col" style="border: 1px solid black;">
                Birth Date
            </div>
            <div class="col" style="border: 1px solid black;">
                Current Owner
            </div>
        </div>

        foreach (BreedingRecord record in BreedingRecords)
        {
            <div class="row">
                <div class="col" style="border: 1px solid black;">
                    <button class="btn btn-primary" @onclick="(() => GoToBreedingRecordDetails(record.Id))">@record.Name</button>
                </div>
                <div class="col" style="border: 1px solid black;">
                    @record.Birthday.Date
                </div>
                <div class="col" style="border: 1px solid black;">
                    @record.Owner.FirstName @record.Owner.LastName
                </div>
            </div>
        }
    }
}


@code {

    private bool Loaded = false;

    private List<BreedingRecord> BreedingRecords;

    protected override async Task OnInitializedAsync()
    {
        if (AuthService.user.Key != "" && AuthService.user.Key != null)
        {



            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", AuthService.user.Key);

            var response = await Http.GetAsync("http://localhost:5050/auth/Verify");

            if (!response.IsSuccessStatusCode)
            {
                AuthService.user.Username = "";
                AuthService.user.Key = "";
                NavigationManager.NavigateTo("/");
            }
            else
            {
                BreedingRecords = await BreedingRecordService.GetAllBreedingRecords(AuthService.user.Key);
            }
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }

        Loaded = true;
    }

    private void GoToBreedingRecordDetails(int id)
    {
        NavigationManager.NavigateTo("/breedingRecord/view/" + id.ToString());
    }
}
