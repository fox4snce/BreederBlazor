@using BreederBlazor.Models.Base

@if (Loaded)
{
    <RadzenAccordion Expand=@(args => Change(args, "Accordion with single expand", "expanded"))>
        <Items>
            <RadzenAccordionItem Text="@contactRecord.Name" Icon="account_circle">
                <RadzenCard Style="width: 50%;">
                    <div class="row"><div class="col-md-2" style="text-align: right;">Name:</div><div class="col">@contactRecord.FirstName @contactRecord.LastName</div></div>
                    <div class="row"><div class="col-md-2" style="text-align: right;">Type:</div><div class="col">@contactRecord.Type</div></div>
                    <div class="row"><div class="col-md-2" style="text-align: right;">Email:</div><div class="col">@contactRecord.Email</div></div>
                    <div class="row"><div class="col-md-2" style="text-align: right;">Phone:</div><div class="col">@contactRecord.PhoneNumber</div></div>
                    <div class="row"><div class="col-md-2" style="text-align: right;">Cell:</div><div class="col">@contactRecord.CellPhone</div></div>
                    <div class="row"><div class="col-md-2" style="text-align: right;">Address:</div><div class="col">@contactRecord.Address</div></div>
                    @if (contactRecord.Address2 != null && contactRecord.Address2 != "")
                    {
                        <div class="row"><div class="col-md-2" style="text-align: right;">Address 2:</div><div class="col">@contactRecord.Address2</div></div>
                    }
                    <div class="row"><div class="col-md-2" style="text-align: right;">City:</div><div class="col">@contactRecord.City</div></div>
                    <div class="row"><div class="col-md-2" style="text-align: right;">State:</div><div class="col">@contactRecord.State</div></div>
                    <div class="row"><div class="col-md-2" style="text-align: right;">Zip:</div><div class="col">@contactRecord.ZipCode</div></div>
                    <div class="row"><div class="col-md-2" style="text-align: right;">Country:</div><div class="col">@contactRecord.Country</div></div>

                </RadzenCard>
            </RadzenAccordionItem>

        </Items>
    </RadzenAccordion>
}

@code
{
    [Parameter]
    public Contact contactRecord { get; set; }

    private bool Loaded = false;

    private bool FullView = false;

    protected override async Task OnInitializedAsync()
    {
        if (contactRecord == null)
        {
            Contact c = new Contact
            {
                FirstName = "Bob",
                LastName = "Boiling",
                Email = "BBoiling@gmail.com",
                Type = ContactType.Breeder,
                Address = "10293 SuperDuper Ave.",
                Address2 = "Apartment 2",
                City = "Poshcosh",
                State = "VT",
                ZipCode = "05192",
                Country = "USA",
                PhoneNumber = "555-555-5555",
                CellPhone = "555-555-5554"
                //public List<ContactNote> Notes { get; set; }
            };

            contactRecord = c;
        }


        Loaded = true;
    }


    void Change(object value, string name, string action)
    {
        //console.Log($"{name} item with index {value} {action}");
    }
}
